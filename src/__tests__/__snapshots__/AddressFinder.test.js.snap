// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EZ AddressFinder component when passed a postcode with matching addresses should display the matching addresses 1`] = `
.c4 {
  border-radius: 0.6rem;
  font-size: 15px;
  font-weight: 600;
  line-height: 40px;
  padding: 0 12px;
  background-color: #f09500;
  color: #fff;
  border: 1px solid #f09500;
  -webkit-transition: all 300ms ease 0s;
  transition: all 300ms ease 0s;
}

.c4:disabled {
  opacity: 0.65;
}

.c4:not(:disabled):hover {
  cursor: pointer;
  background-color: #bd7500;
  color: #fff;
}

.c4:not(:disabled):focus {
  outline: 0;
  border-color: #a36600;
}

.c4.secondary {
  background-color: #fff;
  color: #4f5c6a;
  border: 1px solid #8a95a4;
}

.c4.secondary:not(:disabled):hover {
  background-color: #6e7b8d;
  color: #fff;
}

.c4.secondary:not(:disabled):focus {
  border-color: #6c7d98;
}

.c2 {
  color: #393939;
  border-radius: 0.6rem;
  border: 1px solid #c1c7d2;
  padding: 0px 15px;
  line-height: 39px;
}

.c2.error {
  border-color: #be1e2d;
  background-color: #f7cbcf;
}

.c2:focus {
  outline: 0;
  border-color: #0d8788;
}

.c6 {
  position: relative;
  display: block;
  margin: 1.5rem 0;
  width: 100%;
  color: #393939;
  padding: 10px;
  outline: 0;
  border: 1px solid #c1c7d2;
  border-radius: 0.6rem;
}

.c6:hover,
.c6:focus {
  border-color: #0d8788;
}

.c6:disabled {
  opacity: 0.5;
  pointer-events: none;
}

.c6 option {
  padding: 5px;
}

.c1 {
  box-sizing: border-box;
  padding-right: 10px;
}

.c3 {
  box-sizing: border-box;
}

.c7 {
  box-sizing: border-box;
  margin-left: auto;
}

.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c5 {
  box-sizing: border-box;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<Theme>
  <ThemeProvider
    theme={
      Object {
        "border": "1px solid #dbdee4",
        "borderRadius": "0.6rem",
        "color": Object {
          "background": "#f4f4f5",
          "black": "#393939",
          "danger": "#be1e2d",
          "gray100": "#f4f4f5",
          "gray200": "#dbdee4",
          "gray300": "#c1c7d2",
          "gray400": "#a8b2c2",
          "gray500": "#8a95a4",
          "gray600": "#6c7887",
          "gray700": "#4f5c6a",
          "gray800": "#32404d",
          "gray900": "#1a2127",
          "info": "#823190",
          "primary": "#0d8788",
          "secondary": "#f09500",
          "success": "#92d400",
          "warning": "#f8cb00",
          "white": "#fff",
        },
        "font": "Moderat-Light,-apple-system,BlinkMacSystemFont,Helvetica Neue,Segoe UI,Oxygen,Ubuntu,Cantarell,Open Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol",
        "fontBold": "Moderat-Black,-apple-system,BlinkMacSystemFont,Helvetica Neue,Segoe UI,Oxygen,Ubuntu,Cantarell,Open Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol",
        "inputBorder": "1px solid #c1c7d2",
        "maxWidth": "1000px",
      }
    }
  >
    <GlobalStyleComponent />
    <AddressFinder
      postcode="TE3 5ST"
    >
      <Flex>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "src__Flex-sc-1sbtrzs-1",
                "isStatic": false,
                "lastClassName": "c5",
                "rules": Array [
                  "box-sizing: border-box;",
                  [Function],
                  "display: flex;",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "src__Box-sc-1sbtrzs-0",
              ],
              "propTypes": Object {
                "alignContent": [Function],
                "alignItems": [Function],
                "alignSelf": [Function],
                "backgroundColor": [Function],
                "bg": [Function],
                "color": [Function],
                "display": [Function],
                "flex": [Function],
                "flexBasis": [Function],
                "flexDirection": [Function],
                "flexGrow": [Function],
                "flexShrink": [Function],
                "flexWrap": [Function],
                "fontFamily": [Function],
                "fontSize": [Function],
                "fontStyle": [Function],
                "fontWeight": [Function],
                "height": [Function],
                "justifyContent": [Function],
                "justifyItems": [Function],
                "justifySelf": [Function],
                "letterSpacing": [Function],
                "lineHeight": [Function],
                "m": [Function],
                "margin": [Function],
                "marginBottom": [Function],
                "marginLeft": [Function],
                "marginRight": [Function],
                "marginTop": [Function],
                "marginX": [Function],
                "marginY": [Function],
                "maxHeight": [Function],
                "maxWidth": [Function],
                "mb": [Function],
                "minHeight": [Function],
                "minWidth": [Function],
                "ml": [Function],
                "mr": [Function],
                "mt": [Function],
                "mx": [Function],
                "my": [Function],
                "opacity": [Function],
                "order": [Function],
                "overflow": [Function],
                "overflowX": [Function],
                "overflowY": [Function],
                "p": [Function],
                "padding": [Function],
                "paddingBottom": [Function],
                "paddingLeft": [Function],
                "paddingRight": [Function],
                "paddingTop": [Function],
                "paddingX": [Function],
                "paddingY": [Function],
                "pb": [Function],
                "pl": [Function],
                "pr": [Function],
                "pt": [Function],
                "px": [Function],
                "py": [Function],
                "size": [Function],
                "textAlign": [Function],
                "verticalAlign": [Function],
                "width": [Function],
              },
              "render": [Function],
              "styledComponentId": "src__Flex-sc-1sbtrzs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Box
              pr={10}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "src__Box-sc-1sbtrzs-0",
                      "isStatic": false,
                      "lastClassName": "c7",
                      "rules": Array [
                        "box-sizing: border-box;",
                        [Function],
                      ],
                    },
                    "displayName": "Box",
                    "foldedComponentIds": Array [],
                    "propTypes": Object {
                      "alignContent": [Function],
                      "alignItems": [Function],
                      "alignSelf": [Function],
                      "backgroundColor": [Function],
                      "bg": [Function],
                      "color": [Function],
                      "display": [Function],
                      "flex": [Function],
                      "flexBasis": [Function],
                      "flexDirection": [Function],
                      "flexGrow": [Function],
                      "flexShrink": [Function],
                      "flexWrap": [Function],
                      "fontFamily": [Function],
                      "fontSize": [Function],
                      "fontStyle": [Function],
                      "fontWeight": [Function],
                      "height": [Function],
                      "justifyContent": [Function],
                      "justifyItems": [Function],
                      "justifySelf": [Function],
                      "letterSpacing": [Function],
                      "lineHeight": [Function],
                      "m": [Function],
                      "margin": [Function],
                      "marginBottom": [Function],
                      "marginLeft": [Function],
                      "marginRight": [Function],
                      "marginTop": [Function],
                      "marginX": [Function],
                      "marginY": [Function],
                      "maxHeight": [Function],
                      "maxWidth": [Function],
                      "mb": [Function],
                      "minHeight": [Function],
                      "minWidth": [Function],
                      "ml": [Function],
                      "mr": [Function],
                      "mt": [Function],
                      "mx": [Function],
                      "my": [Function],
                      "opacity": [Function],
                      "order": [Function],
                      "overflow": [Function],
                      "overflowX": [Function],
                      "overflowY": [Function],
                      "p": [Function],
                      "padding": [Function],
                      "paddingBottom": [Function],
                      "paddingLeft": [Function],
                      "paddingRight": [Function],
                      "paddingTop": [Function],
                      "paddingX": [Function],
                      "paddingY": [Function],
                      "pb": [Function],
                      "pl": [Function],
                      "pr": [Function],
                      "pt": [Function],
                      "px": [Function],
                      "py": [Function],
                      "size": [Function],
                      "textAlign": [Function],
                      "verticalAlign": [Function],
                      "width": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "src__Box-sc-1sbtrzs-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                pr={10}
              >
                <div
                  className="c1"
                >
                  <Input
                    id="postcodeInput"
                    onChange={[Function]}
                    placeholder="Please enter your postcode"
                    value=""
                  >
                    <styled.input
                      id="postcodeInput"
                      onChange={[Function]}
                      placeholder="Please enter your postcode"
                      readOnly={false}
                      type="text"
                      value=""
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-jKJlTe",
                              "isStatic": false,
                              "lastClassName": "c2",
                              "rules": Array [
                                "
  color: ",
                                [Function],
                                ";
  border-radius: ",
                                [Function],
                                ";
  border: ",
                                [Function],
                                ";
  padding: 0px 15px;
  line-height: 39px;
  &.error {
    border-color: ",
                                [Function],
                                ";
    background-color: ",
                                [Function],
                                ";
  }
  :focus {
    outline: 0;
    border-color: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "displayName": "styled.input",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-jKJlTe",
                            "target": "input",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        id="postcodeInput"
                        onChange={[Function]}
                        placeholder="Please enter your postcode"
                        readOnly={false}
                        type="text"
                        value=""
                      >
                        <input
                          className="c2"
                          id="postcodeInput"
                          onChange={[Function]}
                          placeholder="Please enter your postcode"
                          readOnly={false}
                          type="text"
                          value=""
                        />
                      </StyledComponent>
                    </styled.input>
                  </Input>
                </div>
              </StyledComponent>
            </Box>
            <Box>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "src__Box-sc-1sbtrzs-0",
                      "isStatic": false,
                      "lastClassName": "c7",
                      "rules": Array [
                        "box-sizing: border-box;",
                        [Function],
                      ],
                    },
                    "displayName": "Box",
                    "foldedComponentIds": Array [],
                    "propTypes": Object {
                      "alignContent": [Function],
                      "alignItems": [Function],
                      "alignSelf": [Function],
                      "backgroundColor": [Function],
                      "bg": [Function],
                      "color": [Function],
                      "display": [Function],
                      "flex": [Function],
                      "flexBasis": [Function],
                      "flexDirection": [Function],
                      "flexGrow": [Function],
                      "flexShrink": [Function],
                      "flexWrap": [Function],
                      "fontFamily": [Function],
                      "fontSize": [Function],
                      "fontStyle": [Function],
                      "fontWeight": [Function],
                      "height": [Function],
                      "justifyContent": [Function],
                      "justifyItems": [Function],
                      "justifySelf": [Function],
                      "letterSpacing": [Function],
                      "lineHeight": [Function],
                      "m": [Function],
                      "margin": [Function],
                      "marginBottom": [Function],
                      "marginLeft": [Function],
                      "marginRight": [Function],
                      "marginTop": [Function],
                      "marginX": [Function],
                      "marginY": [Function],
                      "maxHeight": [Function],
                      "maxWidth": [Function],
                      "mb": [Function],
                      "minHeight": [Function],
                      "minWidth": [Function],
                      "ml": [Function],
                      "mr": [Function],
                      "mt": [Function],
                      "mx": [Function],
                      "my": [Function],
                      "opacity": [Function],
                      "order": [Function],
                      "overflow": [Function],
                      "overflowX": [Function],
                      "overflowY": [Function],
                      "p": [Function],
                      "padding": [Function],
                      "paddingBottom": [Function],
                      "paddingLeft": [Function],
                      "paddingRight": [Function],
                      "paddingTop": [Function],
                      "paddingX": [Function],
                      "paddingY": [Function],
                      "pb": [Function],
                      "pl": [Function],
                      "pr": [Function],
                      "pt": [Function],
                      "px": [Function],
                      "py": [Function],
                      "size": [Function],
                      "textAlign": [Function],
                      "verticalAlign": [Function],
                      "width": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "src__Box-sc-1sbtrzs-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c3"
                >
                  <Button
                    onClick={[Function]}
                  >
                    <styled.button
                      className=""
                      disabled={false}
                      onClick={[Function]}
                    >
                      <StyledComponent
                        className=""
                        disabled={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-kAzzGY",
                              "isStatic": false,
                              "lastClassName": "c4",
                              "rules": Array [
                                "
  border-radius: ",
                                [Function],
                                ";
  font-size: 15px;
  font-weight: 600;
  line-height: 40px;
  padding: 0 12px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  border: 1px solid ",
                                [Function],
                                ";
  transition: all 300ms ease 0s;
  :disabled {
    opacity: 0.65;
  }
  :not(:disabled) {
    :hover {
      cursor: pointer;
      background-color: ",
                                [Function],
                                ";
      color: ",
                                [Function],
                                ";
    }
    :focus {
      outline: 0;
      border-color: ",
                                [Function],
                                ";
    }
  }
  &.secondary {
    background-color: ",
                                [Function],
                                ";
    color: ",
                                [Function],
                                ";
    border: 1px solid ",
                                [Function],
                                ";
    :not(:disabled) {
      :hover {
        background-color: ",
                                [Function],
                                ";
        color: ",
                                [Function],
                                ";
      }
      :focus {
        border-color: ",
                                [Function],
                                ";
      }
    }
  }
",
                              ],
                            },
                            "displayName": "styled.button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-kAzzGY",
                            "target": "button",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <button
                          className="c4"
                          disabled={false}
                          onClick={[Function]}
                        >
                          Search
                        </button>
                      </StyledComponent>
                    </styled.button>
                  </Button>
                </div>
              </StyledComponent>
            </Box>
          </div>
        </StyledComponent>
      </Flex>
      <Flex
        flexDirection="column"
      >
        <StyledComponent
          flexDirection="column"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "src__Flex-sc-1sbtrzs-1",
                "isStatic": false,
                "lastClassName": "c5",
                "rules": Array [
                  "box-sizing: border-box;",
                  [Function],
                  "display: flex;",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "src__Box-sc-1sbtrzs-0",
              ],
              "propTypes": Object {
                "alignContent": [Function],
                "alignItems": [Function],
                "alignSelf": [Function],
                "backgroundColor": [Function],
                "bg": [Function],
                "color": [Function],
                "display": [Function],
                "flex": [Function],
                "flexBasis": [Function],
                "flexDirection": [Function],
                "flexGrow": [Function],
                "flexShrink": [Function],
                "flexWrap": [Function],
                "fontFamily": [Function],
                "fontSize": [Function],
                "fontStyle": [Function],
                "fontWeight": [Function],
                "height": [Function],
                "justifyContent": [Function],
                "justifyItems": [Function],
                "justifySelf": [Function],
                "letterSpacing": [Function],
                "lineHeight": [Function],
                "m": [Function],
                "margin": [Function],
                "marginBottom": [Function],
                "marginLeft": [Function],
                "marginRight": [Function],
                "marginTop": [Function],
                "marginX": [Function],
                "marginY": [Function],
                "maxHeight": [Function],
                "maxWidth": [Function],
                "mb": [Function],
                "minHeight": [Function],
                "minWidth": [Function],
                "ml": [Function],
                "mr": [Function],
                "mt": [Function],
                "mx": [Function],
                "my": [Function],
                "opacity": [Function],
                "order": [Function],
                "overflow": [Function],
                "overflowX": [Function],
                "overflowY": [Function],
                "p": [Function],
                "padding": [Function],
                "paddingBottom": [Function],
                "paddingLeft": [Function],
                "paddingRight": [Function],
                "paddingTop": [Function],
                "paddingX": [Function],
                "paddingY": [Function],
                "pb": [Function],
                "pl": [Function],
                "pr": [Function],
                "pt": [Function],
                "px": [Function],
                "py": [Function],
                "size": [Function],
                "textAlign": [Function],
                "verticalAlign": [Function],
                "width": [Function],
              },
              "render": [Function],
              "styledComponentId": "src__Flex-sc-1sbtrzs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c5"
          >
            <Box>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "src__Box-sc-1sbtrzs-0",
                      "isStatic": false,
                      "lastClassName": "c7",
                      "rules": Array [
                        "box-sizing: border-box;",
                        [Function],
                      ],
                    },
                    "displayName": "Box",
                    "foldedComponentIds": Array [],
                    "propTypes": Object {
                      "alignContent": [Function],
                      "alignItems": [Function],
                      "alignSelf": [Function],
                      "backgroundColor": [Function],
                      "bg": [Function],
                      "color": [Function],
                      "display": [Function],
                      "flex": [Function],
                      "flexBasis": [Function],
                      "flexDirection": [Function],
                      "flexGrow": [Function],
                      "flexShrink": [Function],
                      "flexWrap": [Function],
                      "fontFamily": [Function],
                      "fontSize": [Function],
                      "fontStyle": [Function],
                      "fontWeight": [Function],
                      "height": [Function],
                      "justifyContent": [Function],
                      "justifyItems": [Function],
                      "justifySelf": [Function],
                      "letterSpacing": [Function],
                      "lineHeight": [Function],
                      "m": [Function],
                      "margin": [Function],
                      "marginBottom": [Function],
                      "marginLeft": [Function],
                      "marginRight": [Function],
                      "marginTop": [Function],
                      "marginX": [Function],
                      "marginY": [Function],
                      "maxHeight": [Function],
                      "maxWidth": [Function],
                      "mb": [Function],
                      "minHeight": [Function],
                      "minWidth": [Function],
                      "ml": [Function],
                      "mr": [Function],
                      "mt": [Function],
                      "mx": [Function],
                      "my": [Function],
                      "opacity": [Function],
                      "order": [Function],
                      "overflow": [Function],
                      "overflowX": [Function],
                      "overflowY": [Function],
                      "p": [Function],
                      "padding": [Function],
                      "paddingBottom": [Function],
                      "paddingLeft": [Function],
                      "paddingRight": [Function],
                      "paddingTop": [Function],
                      "paddingX": [Function],
                      "paddingY": [Function],
                      "pb": [Function],
                      "pl": [Function],
                      "pr": [Function],
                      "pt": [Function],
                      "px": [Function],
                      "py": [Function],
                      "size": [Function],
                      "textAlign": [Function],
                      "verticalAlign": [Function],
                      "width": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "src__Box-sc-1sbtrzs-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c3"
                >
                  <SelectList
                    id="addressList"
                    onChange={[Function]}
                    size={4}
                  >
                    <styled.select
                      onChange={[Function]}
                      size={4}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-jWBwVP",
                              "isStatic": false,
                              "lastClassName": "c6",
                              "rules": Array [
                                "
  position: relative;
  display: block;
  margin: 1.5rem 0;
  width: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  padding: 10px;
  outline: 0;
  border: ",
                                [Function],
                                ";
  border-radius: ",
                                [Function],
                                ";
  &:hover,
  &:focus {
    border-color: ",
                                [Function],
                                ";
  }
  &:disabled {
    opacity: 0.5;
    pointer-events: none;
  }
  option {
    padding: 5px;
  }
",
                              ],
                            },
                            "displayName": "styled.select",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-jWBwVP",
                            "target": "select",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onChange={[Function]}
                        size={4}
                      >
                        <select
                          className="c6"
                          onChange={[Function]}
                          size={4}
                        >
                          <AddressListOptions
                            addresses={Array []}
                          />
                        </select>
                      </StyledComponent>
                    </styled.select>
                  </SelectList>
                </div>
              </StyledComponent>
            </Box>
            <Box
              ml="auto"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "src__Box-sc-1sbtrzs-0",
                      "isStatic": false,
                      "lastClassName": "c7",
                      "rules": Array [
                        "box-sizing: border-box;",
                        [Function],
                      ],
                    },
                    "displayName": "Box",
                    "foldedComponentIds": Array [],
                    "propTypes": Object {
                      "alignContent": [Function],
                      "alignItems": [Function],
                      "alignSelf": [Function],
                      "backgroundColor": [Function],
                      "bg": [Function],
                      "color": [Function],
                      "display": [Function],
                      "flex": [Function],
                      "flexBasis": [Function],
                      "flexDirection": [Function],
                      "flexGrow": [Function],
                      "flexShrink": [Function],
                      "flexWrap": [Function],
                      "fontFamily": [Function],
                      "fontSize": [Function],
                      "fontStyle": [Function],
                      "fontWeight": [Function],
                      "height": [Function],
                      "justifyContent": [Function],
                      "justifyItems": [Function],
                      "justifySelf": [Function],
                      "letterSpacing": [Function],
                      "lineHeight": [Function],
                      "m": [Function],
                      "margin": [Function],
                      "marginBottom": [Function],
                      "marginLeft": [Function],
                      "marginRight": [Function],
                      "marginTop": [Function],
                      "marginX": [Function],
                      "marginY": [Function],
                      "maxHeight": [Function],
                      "maxWidth": [Function],
                      "mb": [Function],
                      "minHeight": [Function],
                      "minWidth": [Function],
                      "ml": [Function],
                      "mr": [Function],
                      "mt": [Function],
                      "mx": [Function],
                      "my": [Function],
                      "opacity": [Function],
                      "order": [Function],
                      "overflow": [Function],
                      "overflowX": [Function],
                      "overflowY": [Function],
                      "p": [Function],
                      "padding": [Function],
                      "paddingBottom": [Function],
                      "paddingLeft": [Function],
                      "paddingRight": [Function],
                      "paddingTop": [Function],
                      "paddingX": [Function],
                      "paddingY": [Function],
                      "pb": [Function],
                      "pl": [Function],
                      "pr": [Function],
                      "pt": [Function],
                      "px": [Function],
                      "py": [Function],
                      "size": [Function],
                      "textAlign": [Function],
                      "verticalAlign": [Function],
                      "width": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "src__Box-sc-1sbtrzs-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                ml="auto"
              >
                <div
                  className="c7"
                >
                  <Button
                    onClick={[Function]}
                  >
                    <styled.button
                      className=""
                      disabled={false}
                      onClick={[Function]}
                    >
                      <StyledComponent
                        className=""
                        disabled={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-kAzzGY",
                              "isStatic": false,
                              "lastClassName": "c4",
                              "rules": Array [
                                "
  border-radius: ",
                                [Function],
                                ";
  font-size: 15px;
  font-weight: 600;
  line-height: 40px;
  padding: 0 12px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  border: 1px solid ",
                                [Function],
                                ";
  transition: all 300ms ease 0s;
  :disabled {
    opacity: 0.65;
  }
  :not(:disabled) {
    :hover {
      cursor: pointer;
      background-color: ",
                                [Function],
                                ";
      color: ",
                                [Function],
                                ";
    }
    :focus {
      outline: 0;
      border-color: ",
                                [Function],
                                ";
    }
  }
  &.secondary {
    background-color: ",
                                [Function],
                                ";
    color: ",
                                [Function],
                                ";
    border: 1px solid ",
                                [Function],
                                ";
    :not(:disabled) {
      :hover {
        background-color: ",
                                [Function],
                                ";
        color: ",
                                [Function],
                                ";
      }
      :focus {
        border-color: ",
                                [Function],
                                ";
      }
    }
  }
",
                              ],
                            },
                            "displayName": "styled.button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-kAzzGY",
                            "target": "button",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <button
                          className="c4"
                          disabled={false}
                          onClick={[Function]}
                        >
                          Select
                        </button>
                      </StyledComponent>
                    </styled.button>
                  </Button>
                </div>
              </StyledComponent>
            </Box>
          </div>
        </StyledComponent>
      </Flex>
    </AddressFinder>
  </ThemeProvider>
</Theme>
`;

exports[`RTR AddressFinder component when passed a postcode with matching addresses should display the matching addresses 1`] = `
Array [
  .c4 {
  border-radius: 0.6rem;
  font-size: 15px;
  font-weight: 600;
  line-height: 40px;
  padding: 0 12px;
  background-color: #f09500;
  color: #fff;
  border: 1px solid #f09500;
  -webkit-transition: all 300ms ease 0s;
  transition: all 300ms ease 0s;
}

.c4:disabled {
  opacity: 0.65;
}

.c4:not(:disabled):hover {
  cursor: pointer;
  background-color: #bd7500;
  color: #fff;
}

.c4:not(:disabled):focus {
  outline: 0;
  border-color: #a36600;
}

.c4.secondary {
  background-color: #fff;
  color: #4f5c6a;
  border: 1px solid #8a95a4;
}

.c4.secondary:not(:disabled):hover {
  background-color: #6e7b8d;
  color: #fff;
}

.c4.secondary:not(:disabled):focus {
  border-color: #6c7d98;
}

.c2 {
  color: #393939;
  border-radius: 0.6rem;
  border: 1px solid #c1c7d2;
  padding: 0px 15px;
  line-height: 39px;
}

.c2.error {
  border-color: #be1e2d;
  background-color: #f7cbcf;
}

.c2:focus {
  outline: 0;
  border-color: #0d8788;
}

.c1 {
  box-sizing: border-box;
  padding-right: 10px;
}

.c3 {
  box-sizing: border-box;
}

.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<div
    className="c0"
  >
    <div
      className="c1"
    >
      <input
        className="c2"
        id="postcodeInput"
        onChange={[Function]}
        placeholder="Please enter your postcode"
        readOnly={false}
        type="text"
        value=""
      />
    </div>
    <div
      className="c3"
    >
      <button
        className="c4"
        disabled={false}
        onClick={[Function]}
      >
        Search
      </button>
    </div>
  </div>,
  .c4 {
  border-radius: 0.6rem;
  font-size: 15px;
  font-weight: 600;
  line-height: 40px;
  padding: 0 12px;
  background-color: #f09500;
  color: #fff;
  border: 1px solid #f09500;
  -webkit-transition: all 300ms ease 0s;
  transition: all 300ms ease 0s;
}

.c4:disabled {
  opacity: 0.65;
}

.c4:not(:disabled):hover {
  cursor: pointer;
  background-color: #bd7500;
  color: #fff;
}

.c4:not(:disabled):focus {
  outline: 0;
  border-color: #a36600;
}

.c4.secondary {
  background-color: #fff;
  color: #4f5c6a;
  border: 1px solid #8a95a4;
}

.c4.secondary:not(:disabled):hover {
  background-color: #6e7b8d;
  color: #fff;
}

.c4.secondary:not(:disabled):focus {
  border-color: #6c7d98;
}

.c2 {
  position: relative;
  display: block;
  margin: 1.5rem 0;
  width: 100%;
  color: #393939;
  padding: 10px;
  outline: 0;
  border: 1px solid #c1c7d2;
  border-radius: 0.6rem;
}

.c2:hover,
.c2:focus {
  border-color: #0d8788;
}

.c2:disabled {
  opacity: 0.5;
  pointer-events: none;
}

.c2 option {
  padding: 5px;
}

.c1 {
  box-sizing: border-box;
}

.c3 {
  box-sizing: border-box;
  margin-left: auto;
}

.c0 {
  box-sizing: border-box;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<div
    className="c0"
  >
    <div
      className="c1"
    >
      <select
        className="c2"
        onChange={[Function]}
        size={4}
      />
    </div>
    <div
      className="c3"
    >
      <button
        className="c4"
        disabled={false}
        onClick={[Function]}
      >
        Select
      </button>
    </div>
  </div>,
]
`;
